<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.forzatune.backend.mapper.CarMapper">

    <!-- 结果映射 -->
    <resultMap id="CarResultMap" type="com.forzatune.backend.entity.Car">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="manufacturer" column="manufacturer"/>
        <result property="year" column="year"/>
        <result property="category" column="category"/>
        <result property="pi" column="pi"/>
        <result property="drivetrain" column="drivetrain"/>
        <result property="imageUrl" column="image_url"/>
        <result property="gameId" column="game_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <resultMap id="PopularCarDtoResultMap" type="com.forzatune.backend.dto.PopularCarDto">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="manufacturer" column="manufacturer"/>
        <result property="year" column="year"/>
        <result property="category" column="category"/>
        <result property="pi" column="pi"/>
        <result property="imageUrl" column="image_url"/>
        <result property="tuneCount" column="tuneCount"/>
    </resultMap>

    <!-- 基础查询字段 -->
    <sql id="Base_Column_List">
        id, name, manufacturer, year, category, pi, drivetrain, image_url, game_id, created_at, updated_at
    </sql>

    <sql id="Search_Conditions">
        <where>
            <if test="search != null and search != ''">
                (name LIKE CONCAT('%', #{search}, '%') OR manufacturer LIKE CONCAT('%', #{search}, '%'))
            </if>
            <if test="manufacturer != null and manufacturer != ''">
                AND manufacturer = #{manufacturer}
            </if>
            <if test="category != null and category != ''">
                AND category = #{category}
            </if>
            <if test="drivetrain != null and drivetrain != ''">
                AND drivetrain = #{drivetrain}
            </if>
        </where>
    </sql>

    <select id="searchCars" parameterType="com.forzatune.backend.vo.CarsSearchVo" resultMap="CarResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM cars
        <include refid="Search_Conditions"/>
        ORDER BY manufacturer ASC, year DESC, name ASC
        LIMIT #{limit} OFFSET #{offset} </select>

    <select id="countCars" parameterType="com.forzatune.backend.vo.CarsSearchVo" resultType="long">
        SELECT COUNT(*)
        FROM cars
        <include refid="Search_Conditions"/> </select>

    <select id="selectById" resultMap="CarResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM cars
        WHERE id = #{id}
    </select>

    <!--获取流行车辆-->
    <select id="selectPopularCars" resultMap="PopularCarDtoResultMap">
        SELECT
        c.id, c.name, c.manufacturer, c.year, c.category, c.pi, c.image_url,
        COUNT(t.id) AS tuneCount
        FROM
        cars c
        LEFT JOIN
        tunes t ON c.id = t.car_id
        GROUP BY
        c.id
        HAVING
        tuneCount > 0
        ORDER BY
        tuneCount DESC
        LIMIT #{limit}
    </select>

    <select id="countTotal" resultType="long">
        SELECT COUNT(*) FROM cars
    </select>

    <!-- 插入车辆 -->
    <insert id="insert" parameterType="com.forzatune.backend.entity.Car">
        INSERT INTO cars (
            id, name, manufacturer, year, category, pi, drivetrain, image_url, game_id, created_at, updated_at
        ) VALUES (
            #{id}, #{name}, #{manufacturer}, #{year}, #{category}, #{pi}, #{drivetrain}, #{imageUrl}, #{gameId}, NOW(), NOW()
        )
    </insert>

    <!-- 更新车辆 -->
    <update id="update" parameterType="com.forzatune.backend.entity.Car">
        UPDATE cars SET
            name = #{name},
            manufacturer = #{manufacturer},
            year = #{year},
            category = #{category},
            pi = #{pi},
            drivetrain = #{drivetrain},
            image_url = #{imageUrl},
            game_id = #{gameId},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 删除车辆 -->
    <delete id="deleteById">
        DELETE FROM cars WHERE id = #{id}
    </delete>
</mapper>